for N in [Float64, Rational{Int}, Float32]
    # UnionSet of Polygon
    # Union construction
    p1 = HPolygon{N}()
    c = LinearConstraint(N[1., 0.], N(1.))
    addconstraint!(p1, c)
    c = LinearConstraint(N[-1., 0.], N(1.))
    addconstraint!(p1, c)
    c = LinearConstraint(N[0., 1.], N(1.))
    addconstraint!(p1, c)
    c = LinearConstraint(N[0., -1.], N(1.))
    addconstraint!(p1, c)
    p2 = HPolygon{N}()
    v = N[4., 5.]
    c = LinearConstraint(N[1., 0.], N(1.9 + dot(v, N[1., 0.]))
    addconstraint!(p2, c)
    c = LinearConstraint(N[-1., 0.], N(1.) + dot(v, N[-1., 0.]))
    addconstraint!(p2, c)
    c = LinearConstraint(N[0., 1.], N(1.) + dot(v, N[0., 1.]))
    addconstraint!(p2, c)
    c = LinearConstraint(N[0., -1.], N(1.) + dot(v, N[0., -1.]))
    addconstraint!(p2, c)
    u = UnionSet([p1, p2])

    # membership
    @test ∈(N[0., 0.], u)
    @test ∈(N[1., 0.], u)
    @test ∈(N[-1., 0.], u)
    @test ∈(N[0., 1.], u)
    @test ∈(N[0., -1.], u)
    @test ∈(N[4., 5.], u)
    @test ∈(N[5., 5.], u)
    @test ∈(N[3., 5.], u)
    @test ∈(N[4., 6.], u)
    @test ∈(N[4., 4.], u)
    @test !∈(N[2., 2.], u)
    @test !∈(N[2., 5.], u)
    @test !∈(N[5., 2.], u)
    @test !∈(N[-1., 2.], u)
    @test !∈(N[-5., -5.], u)
end
